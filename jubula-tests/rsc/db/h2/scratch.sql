;              
CREATE USER IF NOT EXISTS SA SALT '71f484c07a8756e7' HASH '10d1080c5ec86d86cc61d14ef5d4e04893912873aa250babbacc0f38d42a4d4a' ADMIN;            
DROP TABLE IF EXISTS PUBLIC.KONTAKT CASCADE;   
DROP TABLE IF EXISTS PUBLIC.KONTAKT_ADRESS_JOINT CASCADE;      
DROP TABLE IF EXISTS PUBLIC.FAELLE CASCADE;    
DROP TABLE IF EXISTS PUBLIC.BEHANDLUNGEN CASCADE;              
DROP TABLE IF EXISTS PUBLIC.ARTIKEL CASCADE;   
DROP TABLE IF EXISTS PUBLIC.PATIENT_ARTIKEL_JOINT CASCADE;     
DROP TABLE IF EXISTS PUBLIC.ARTIKEL_DETAILS CASCADE;           
DROP TABLE IF EXISTS PUBLIC.KONTO CASCADE;     
DROP TABLE IF EXISTS PUBLIC.LEISTUNGEN CASCADE;
DROP TABLE IF EXISTS PUBLIC.LEISTUNGSBLOCK CASCADE;            
DROP TABLE IF EXISTS PUBLIC.EK_PREISE CASCADE; 
DROP TABLE IF EXISTS PUBLIC.VK_PREISE CASCADE; 
DROP TABLE IF EXISTS PUBLIC.DIAGNOSEN CASCADE; 
DROP TABLE IF EXISTS PUBLIC.BEHDL_DG_JOINT CASCADE;            
DROP TABLE IF EXISTS PUBLIC.CONFIG CASCADE;    
DROP TABLE IF EXISTS PUBLIC.BRIEFE CASCADE;    
DROP TABLE IF EXISTS PUBLIC.OUTPUT_LOG CASCADE;
DROP TABLE IF EXISTS PUBLIC.RECHNUNGEN CASCADE;
DROP TABLE IF EXISTS PUBLIC.ZAHLUNGEN CASCADE; 
DROP TABLE IF EXISTS PUBLIC.REMINDERS CASCADE; 
DROP TABLE IF EXISTS PUBLIC.REMINDERS_RESPONSIBLE_LINK CASCADE;
DROP TABLE IF EXISTS PUBLIC.TRACES CASCADE;    
DROP TABLE IF EXISTS PUBLIC.BBS CASCADE;       
DROP TABLE IF EXISTS PUBLIC.LABORITEMS CASCADE;
DROP TABLE IF EXISTS PUBLIC.LABORWERTE CASCADE;
DROP TABLE IF EXISTS PUBLIC.LABGROUPS CASCADE; 
DROP TABLE IF EXISTS PUBLIC.LABGROUP_ITEM_JOINT CASCADE;       
DROP TABLE IF EXISTS PUBLIC.REZEPTE CASCADE;   
DROP TABLE IF EXISTS PUBLIC.HEAP CASCADE;      
DROP TABLE IF EXISTS PUBLIC.AUF CASCADE;       
DROP TABLE IF EXISTS PUBLIC.EIGENLEISTUNGEN CASCADE;           
DROP TABLE IF EXISTS PUBLIC.HEAP2 CASCADE;     
DROP TABLE IF EXISTS PUBLIC.LOGS CASCADE;      
DROP TABLE IF EXISTS PUBLIC.USERCONFIG CASCADE;
DROP TABLE IF EXISTS PUBLIC.XID CASCADE;       
DROP TABLE IF EXISTS PUBLIC.ETIKETTEN CASCADE; 
DROP TABLE IF EXISTS PUBLIC.ETIKETTEN_OBJECT_LINK CASCADE;     
DROP TABLE IF EXISTS PUBLIC.ETIKETTEN_OBJCLASS_LINK CASCADE;   
DROP TABLE IF EXISTS PUBLIC.DBIMAGE CASCADE;   
DROP TABLE IF EXISTS PUBLIC.USER_ CASCADE;     
DROP TABLE IF EXISTS PUBLIC.ROLE CASCADE;      
DROP TABLE IF EXISTS PUBLIC.USER_ROLE_JOINT CASCADE;           
DROP TABLE IF EXISTS PUBLIC.RIGHT_ CASCADE;    
DROP TABLE IF EXISTS PUBLIC.ROLE_RIGHT_JOINT CASCADE;          
DROP VIEW IF EXISTS PUBLIC.RIGHTS_PER_ROLE CASCADE;            
DROP VIEW IF EXISTS PUBLIC.RIGHTS_PER_USER CASCADE;            
CREATE CACHED TABLE PUBLIC.KONTAKT(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    ISTORGANISATION CHAR(1) DEFAULT '0',
    ISTPERSON CHAR(1) DEFAULT '0',
    ISTPATIENT CHAR(1) DEFAULT '0',
    ISTANWENDER CHAR(1) DEFAULT '0',
    ISTMANDANT CHAR(1) DEFAULT '0',
    ISTLABOR CHAR(1) DEFAULT '0',
    LAND CHAR(3),
    GEBURTSDATUM CHAR(8),
    GESCHLECHT CHAR(1),
    TITEL VARCHAR(255),
    TITELSUFFIX VARCHAR(255),
    BEZEICHNUNG1 VARCHAR(255),
    BEZEICHNUNG2 VARCHAR(255),
    BEZEICHNUNG3 VARCHAR(255),
    STRASSE VARCHAR(255),
    PLZ VARCHAR(6),
    ORT VARCHAR(255),
    TELEFON1 VARCHAR(30),
    TELEFON2 VARCHAR(30),
    FAX VARCHAR(30),
    NATELNR VARCHAR(30),
    EMAIL VARCHAR(255),
    WEBSITE VARCHAR(255),
    GRUPPE VARCHAR(10),
    PATIENTNR VARCHAR(40),
    ANSCHRIFT LONGVARCHAR,
    BEMERKUNG LONGVARCHAR,
    DIAGNOSEN LONGVARBINARY,
    PERSANAMNESE LONGVARBINARY,
    SYSANAMNESE LONGVARBINARY,
    FAMANAMNESE LONGVARBINARY,
    RISIKEN LONGVARCHAR,
    ALLERGIEN LONGVARCHAR,
    EXTINFO LONGVARBINARY
);        
ALTER TABLE PUBLIC.KONTAKT ADD CONSTRAINT PUBLIC.CONSTRAINT_A PRIMARY KEY(ID); 
-- 2 +/- SELECT COUNT(*) FROM PUBLIC.KONTAKT;  
INSERT INTO PUBLIC.KONTAKT(ID, LASTUPDATE, DELETED, ISTORGANISATION, ISTPERSON, ISTPATIENT, ISTANWENDER, ISTMANDANT, ISTLABOR, LAND, GEBURTSDATUM, GESCHLECHT, TITEL, TITELSUFFIX, BEZEICHNUNG1, BEZEICHNUNG2, BEZEICHNUNG3, STRASSE, PLZ, ORT, TELEFON1, TELEFON2, FAX, NATELNR, EMAIL, WEBSITE, GRUPPE, PATIENTNR, ANSCHRIFT, BEMERKUNG, DIAGNOSEN, PERSANAMNESE, SYSANAMNESE, FAMANAMNESE, RISIKEN, ALLERGIEN, EXTINFO) VALUES
('e6d77d2962793f86102', 1455973137155, '0', '0', '0', '0', '1', '0', '0', NULL, NULL, NULL, NULL, NULL, 'Administrator', NULL, 'Administrator', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
('U6e0ebf050718ffd9042', 1455973137435, '0', '0', '1', '0', '1', '1', '0', NULL, NULL, 'm', 'Dr. med.', NULL, 'Bond', 'James', NULL, '10, Baker Street', '9999', 'Elexikon', '0061 555 55 55', NULL, '0061 555 55 56', NULL, 'james@bond.invalid', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);         
CREATE INDEX PUBLIC.K0 ON PUBLIC.KONTAKT(BEZEICHNUNG1);        
CREATE CACHED TABLE PUBLIC.KONTAKT_ADRESS_JOINT(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    MYID VARCHAR(25),
    OTHERID VARCHAR(25),
    BEZUG VARCHAR(80),
    MYRTYPE CHAR(4),
    OTHERRTYPE CHAR(4)
);     
ALTER TABLE PUBLIC.KONTAKT_ADRESS_JOINT ADD CONSTRAINT PUBLIC.CONSTRAINT_1 PRIMARY KEY(ID);    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.KONTAKT_ADRESS_JOINT;     
CREATE INDEX PUBLIC.AIJ1 ON PUBLIC.KONTAKT_ADRESS_JOINT(MYID); 
CREATE CACHED TABLE PUBLIC.FAELLE(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    PATIENTID VARCHAR(25),
    GARANTID VARCHAR(25),
    KOSTENTRID VARCHAR(25),
    VERSNUMMER VARCHAR(25),
    FALLNUMMER VARCHAR(25),
    BETRIEBSNUMMER VARCHAR(25),
    DIAGNOSEN VARCHAR(80),
    DATUMVON CHAR(8),
    DATUMBIS CHAR(8),
    BEZEICHNUNG VARCHAR(80),
    GRUND VARCHAR(80),
    GESETZ VARCHAR(20),
    STATUS VARCHAR(80),
    EXTINFO LONGVARBINARY
);       
ALTER TABLE PUBLIC.FAELLE ADD CONSTRAINT PUBLIC.CONSTRAINT_7 PRIMARY KEY(ID);  
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.FAELLE;   
CREATE INDEX PUBLIC.I3 ON PUBLIC.FAELLE(PATIENTID);            
CREATE CACHED TABLE PUBLIC.BEHANDLUNGEN(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    FALLID VARCHAR(25),
    MANDANTID VARCHAR(25),
    RECHNUNGSID VARCHAR(25),
    DATUM CHAR(8),
    DIAGNOSEN VARCHAR(25),
    LEISTUNGEN VARCHAR(25),
    EINTRAG LONGVARBINARY
);           
ALTER TABLE PUBLIC.BEHANDLUNGEN ADD CONSTRAINT PUBLIC.CONSTRAINT_B PRIMARY KEY(ID);            
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.BEHANDLUNGEN;             
CREATE INDEX PUBLIC.I4 ON PUBLIC.BEHANDLUNGEN(FALLID);         
CREATE CACHED TABLE PUBLIC.ARTIKEL(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    EAN VARCHAR(15),
    SUBID VARCHAR(20),
    LIEFERANTID VARCHAR(25),
    KLASSE VARCHAR(80),
    NAME VARCHAR(127),
    NAME_INTERN VARCHAR(127),
    MAXBESTAND CHAR(4),
    MINBESTAND CHAR(4),
    ISTBESTAND CHAR(4),
    EK_PREIS CHAR(8),
    VK_PREIS CHAR(8),
    TYP VARCHAR(15),
    CODECLASS VARCHAR(10),
    EXTID VARCHAR(25),
    LASTIMPORT CHAR(8),
    VALIDFROM CHAR(8),
    VALIDTO CHAR(8),
    ATC_CODE VARCHAR(255),
    EXTINFO LONGVARBINARY
);          
ALTER TABLE PUBLIC.ARTIKEL ADD CONSTRAINT PUBLIC.CONSTRAINT_F PRIMARY KEY(ID); 
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ARTIKEL;  
CREATE INDEX PUBLIC.I5 ON PUBLIC.ARTIKEL(NAME);
CREATE INDEX PUBLIC.ART1 ON PUBLIC.ARTIKEL(SUBID);             
CREATE INDEX PUBLIC.ART2 ON PUBLIC.ARTIKEL(TYP);               
CREATE INDEX PUBLIC.ART3 ON PUBLIC.ARTIKEL(CODECLASS);         
CREATE CACHED TABLE PUBLIC.PATIENT_ARTIKEL_JOINT(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    PATIENTID VARCHAR(25),
    ARTIKELID VARCHAR(25),
    ARTIKEL VARCHAR(255),
    REZEPTID VARCHAR(25),
    DATEFROM CHAR(8),
    DATEUNTIL CHAR(8),
    DOSIS VARCHAR(255),
    ANZAHL CHAR(3),
    BEMERKUNG VARCHAR(255),
    PRESCTYPE CHAR(2),
    SORTORDER CHAR(3),
    PRESCDATE CHAR(8),
    PRESCRIPTOR VARCHAR(25),
    EXTINFO LONGVARBINARY
);           
ALTER TABLE PUBLIC.PATIENT_ARTIKEL_JOINT ADD CONSTRAINT PUBLIC.CONSTRAINT_6 PRIMARY KEY(ID);   
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.PATIENT_ARTIKEL_JOINT;    
CREATE INDEX PUBLIC.PAJ1 ON PUBLIC.PATIENT_ARTIKEL_JOINT(PATIENTID);           
CREATE INDEX PUBLIC.PAJ2 ON PUBLIC.PATIENT_ARTIKEL_JOINT(REZEPTID);            
CREATE CACHED TABLE PUBLIC.ARTIKEL_DETAILS(
    ARTICLE_ID VARCHAR(25),
    NOTES LONGVARCHAR,
    IMAGE LONGVARBINARY
);      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ARTIKEL_DETAILS;          
CREATE CACHED TABLE PUBLIC.KONTO(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    PATIENTID VARCHAR(25),
    RECHNUNGSID VARCHAR(25),
    ZAHLUNGSID VARCHAR(25),
    BETRAG CHAR(8),
    DATUM CHAR(8),
    BEMERKUNG VARCHAR(80)
); 
ALTER TABLE PUBLIC.KONTO ADD CONSTRAINT PUBLIC.CONSTRAINT_4 PRIMARY KEY(ID);   
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.KONTO;    
CREATE INDEX PUBLIC.KONTO1 ON PUBLIC.KONTO(DATUM);             
CREATE INDEX PUBLIC.KONTO2 ON PUBLIC.KONTO(PATIENTID);         
CREATE CACHED TABLE PUBLIC.LEISTUNGEN(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    BEHANDLUNG VARCHAR(25),
    LEISTG_TXT VARCHAR(255),
    LEISTG_CODE VARCHAR(25),
    KLASSE VARCHAR(80),
    ZAHL CHAR(3),
    EK_KOSTEN CHAR(8),
    VK_TP CHAR(8),
    VK_SCALE CHAR(8),
    VK_PREIS CHAR(8),
    SCALE CHAR(4) DEFAULT '100',
    SCALE2 CHAR(4) DEFAULT '100',
    USERID VARCHAR(25),
    DETAIL LONGVARBINARY
);       
ALTER TABLE PUBLIC.LEISTUNGEN ADD CONSTRAINT PUBLIC.CONSTRAINT_D PRIMARY KEY(ID);              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.LEISTUNGEN;               
CREATE INDEX PUBLIC.LST1 ON PUBLIC.LEISTUNGEN(BEHANDLUNG);     
CREATE INDEX PUBLIC.LST2 ON PUBLIC.LEISTUNGEN(KLASSE, LEISTG_CODE);            
CREATE CACHED TABLE PUBLIC.LEISTUNGSBLOCK(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    MANDANTID VARCHAR(25),
    NAME VARCHAR(30),
    MACRO VARCHAR(30),
    LEISTUNGEN LONGVARBINARY
);        
ALTER TABLE PUBLIC.LEISTUNGSBLOCK ADD CONSTRAINT PUBLIC.CONSTRAINT_15 PRIMARY KEY(ID);         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.LEISTUNGSBLOCK;           
CREATE INDEX PUBLIC.BLOCK1 ON PUBLIC.LEISTUNGSBLOCK(NAME);     
CREATE INDEX PUBLIC.BLOCK2 ON PUBLIC.LEISTUNGSBLOCK(MANDANTID);
CREATE INDEX PUBLIC.BLOCK3 ON PUBLIC.LEISTUNGSBLOCK(MACRO);    
CREATE CACHED TABLE PUBLIC.EK_PREISE(
    TYP VARCHAR(80),
    ID VARCHAR(25),
    LASTUPDATE BIGINT,
    DATUM_VON CHAR(8),
    DATUM_BIS CHAR(8),
    MULTIPLIKATOR CHAR(8)
);               
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.EK_PREISE;
CREATE INDEX PUBLIC.EKP1 ON PUBLIC.EK_PREISE(TYP);             
CREATE INDEX PUBLIC.EKP2 ON PUBLIC.EK_PREISE(DATUM_VON);       
CREATE CACHED TABLE PUBLIC.VK_PREISE(
    TYP VARCHAR(80),
    ID VARCHAR(25),
    LASTUPDATE BIGINT,
    DATUM_VON CHAR(8),
    DATUM_BIS CHAR(8),
    MULTIPLIKATOR CHAR(8)
);               
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.VK_PREISE;
CREATE INDEX PUBLIC.VKP1 ON PUBLIC.VK_PREISE(TYP);             
CREATE INDEX PUBLIC.VKP2 ON PUBLIC.VK_PREISE(DATUM_VON);       
CREATE CACHED TABLE PUBLIC.DIAGNOSEN(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    DG_TXT VARCHAR(255),
    DG_CODE VARCHAR(25),
    KLASSE VARCHAR(80)
);         
ALTER TABLE PUBLIC.DIAGNOSEN ADD CONSTRAINT PUBLIC.CONSTRAINT_E PRIMARY KEY(ID);               
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.DIAGNOSEN;
CREATE INDEX PUBLIC.DG1 ON PUBLIC.DIAGNOSEN(KLASSE, DG_CODE);  
CREATE CACHED TABLE PUBLIC.BEHDL_DG_JOINT(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    BEHANDLUNGSID VARCHAR(25),
    DIAGNOSEID VARCHAR(25)
);   
ALTER TABLE PUBLIC.BEHDL_DG_JOINT ADD CONSTRAINT PUBLIC.CONSTRAINT_B0 PRIMARY KEY(ID);         
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.BEHDL_DG_JOINT;           
CREATE INDEX PUBLIC.BDG1 ON PUBLIC.BEHDL_DG_JOINT(BEHANDLUNGSID);              
CREATE CACHED TABLE PUBLIC.CONFIG(
    LASTUPDATE BIGINT,
    PARAM VARCHAR(80) NOT NULL,
    WERT LONGVARCHAR
);              
ALTER TABLE PUBLIC.CONFIG ADD CONSTRAINT PUBLIC.CONSTRAINT_76 PRIMARY KEY(PARAM);              
-- 5 +/- SELECT COUNT(*) FROM PUBLIC.CONFIG;   
INSERT INTO PUBLIC.CONFIG(LASTUPDATE, PARAM, WERT) VALUES
(NULL, 'ablauf/Trace_default', 'none'),
(NULL, 'LocalXIDDomains', STRINGDECODE('www.elexis.ch/xid/kontakt/lab/sendingfacility#2#Sendende Institution#ch.elexis.data.Labor,;www.xid.ch/id/ean#2#EAN#ch.elexis.data.Kontakt,;www.elexis.ch/xid#5#UUID#ch.elexis.data.PersistentObject,;www.xid.ch/id/oid#7#OID#ch.elexis.data.PersistentObject,;www.elexis.ch/xid/kontakt/rolle#2#Rolle#;www.ahv.ch/xid#2#AHV#ch.elexis.data.Person,;www.elexis.ch/xid/kontakt/spez#2#Spezialit\u00e4t#ch.elexis.data.Person,;www.elexis.ch/xid/kontakt/kanton#2#Kanton#ch.elexis.data.Person,;www.elexis.ch/xid/kontakt/anrede#2#Anrede#ch.elexis.data.Person,;')),
(NULL, 'ElexisVersion', '3.1.0'),
(NULL, 'dbversion', '3.1.0'),
(NULL, 'created', '20.02.2016, 13:58:57');        
CREATE CACHED TABLE PUBLIC.BRIEFE(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    BETREFF VARCHAR(80),
    DATUM CHAR(8),
    MODIFIZIERT CHAR(8),
    GEDRUCKT CHAR(8),
    GELOESCHT CHAR(2),
    ABSENDERID VARCHAR(25),
    DESTID VARCHAR(25),
    BEHANDLUNGSID VARCHAR(25),
    PATIENTID VARCHAR(25),
    TYP VARCHAR(30),
    MIMETYPE VARCHAR(80),
    PATH LONGVARCHAR
); 
ALTER TABLE PUBLIC.BRIEFE ADD CONSTRAINT PUBLIC.CONSTRAINT_75 PRIMARY KEY(ID); 
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.BRIEFE;   
CREATE INDEX PUBLIC.I8 ON PUBLIC.BRIEFE(BEHANDLUNGSID);        
CREATE CACHED TABLE PUBLIC.OUTPUT_LOG(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    OBJECTID VARCHAR(25),
    OBJECTTYPE VARCHAR(80),
    DATUM CHAR(8),
    OUTPUTTER VARCHAR(80),
    EXTINFO LONGVARBINARY
);   
ALTER TABLE PUBLIC.OUTPUT_LOG ADD CONSTRAINT PUBLIC.CONSTRAINT_D1 PRIMARY KEY(ID);             
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.OUTPUT_LOG;               
CREATE INDEX PUBLIC.BAL_I1 ON PUBLIC.OUTPUT_LOG(OBJECTID);     
CREATE CACHED TABLE PUBLIC.RECHNUNGEN(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    RNNUMMER VARCHAR(8),
    FALLID VARCHAR(25),
    MANDANTID VARCHAR(25),
    RNDATUM CHAR(8),
    RNSTATUS VARCHAR(20),
    RNDATUMVON CHAR(8),
    RNDATUMBIS CHAR(8),
    BETRAG CHAR(8),
    STATUSDATUM CHAR(8),
    EXTINFO LONGVARBINARY
);               
ALTER TABLE PUBLIC.RECHNUNGEN ADD CONSTRAINT PUBLIC.CONSTRAINT_D0 PRIMARY KEY(ID);             
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.RECHNUNGEN;               
CREATE INDEX PUBLIC.RN1 ON PUBLIC.RECHNUNGEN(FALLID);          
CREATE INDEX PUBLIC.RN2 ON PUBLIC.RECHNUNGEN(MANDANTID);       
CREATE INDEX PUBLIC.RN3 ON PUBLIC.RECHNUNGEN(RNSTATUS);        
CREATE INDEX PUBLIC.RN4 ON PUBLIC.RECHNUNGEN(RNDATUMVON);      
CREATE INDEX PUBLIC.RN5 ON PUBLIC.RECHNUNGEN(RNDATUMBIS);      
CREATE CACHED TABLE PUBLIC.ZAHLUNGEN(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    RECHNUNGSID VARCHAR(25),
    BETRAG CHAR(8),
    DATUM CHAR(8),
    BEMERKUNG VARCHAR(80)
);    
ALTER TABLE PUBLIC.ZAHLUNGEN ADD CONSTRAINT PUBLIC.CONSTRAINT_E7 PRIMARY KEY(ID);              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ZAHLUNGEN;
CREATE INDEX PUBLIC.ZAHL1 ON PUBLIC.ZAHLUNGEN(RECHNUNGSID);    
CREATE CACHED TABLE PUBLIC.REMINDERS(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    IDENTID VARCHAR(25),
    ORIGINID VARCHAR(25),
    RESPONSIBLE VARCHAR(25),
    DATEDUE CHAR(8),
    STATUS VARCHAR(1),
    TYP VARCHAR(1),
    PARAMS LONGVARCHAR,
    MESSAGE LONGVARCHAR
);  
ALTER TABLE PUBLIC.REMINDERS ADD CONSTRAINT PUBLIC.CONSTRAINT_E7D PRIMARY KEY(ID);             
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.REMINDERS;
CREATE INDEX PUBLIC.REM1 ON PUBLIC.REMINDERS(IDENTID);         
CREATE INDEX PUBLIC.REM2 ON PUBLIC.REMINDERS(DATEDUE);         
CREATE INDEX PUBLIC.REM3 ON PUBLIC.REMINDERS(RESPONSIBLE);     
CREATE CACHED TABLE PUBLIC.REMINDERS_RESPONSIBLE_LINK(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    REMINDERID VARCHAR(25),
    RESPONSIBLEID VARCHAR(25)
);       
ALTER TABLE PUBLIC.REMINDERS_RESPONSIBLE_LINK ADD CONSTRAINT PUBLIC.CONSTRAINT_E9 PRIMARY KEY(ID);             
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.REMINDERS_RESPONSIBLE_LINK;               
CREATE INDEX PUBLIC.RRL1 ON PUBLIC.REMINDERS_RESPONSIBLE_LINK(REMINDERID);     
CREATE INDEX PUBLIC.RRL2 ON PUBLIC.REMINDERS_RESPONSIBLE_LINK(RESPONSIBLEID);  
CREATE CACHED TABLE PUBLIC.TRACES(
    LOGTIME BIGINT,
    WORKSTATION VARCHAR(40),
    USERNAME VARCHAR(30),
    ACTION LONGVARCHAR
);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.TRACES;   
CREATE INDEX PUBLIC.TRACE1 ON PUBLIC.TRACES(LOGTIME);          
CREATE INDEX PUBLIC.TRACE2 ON PUBLIC.TRACES(USERNAME);         
CREATE CACHED TABLE PUBLIC.BBS(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    REFERENCE VARCHAR(25),
    TOPIC VARCHAR(80),
    DATE CHAR(8),
    TIME CHAR(4),
    AUTHORID VARCHAR(25),
    MESSAGE LONGVARCHAR
);
ALTER TABLE PUBLIC.BBS ADD CONSTRAINT PUBLIC.CONSTRAINT_10 PRIMARY KEY(ID);    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.BBS;      
CREATE INDEX PUBLIC.BBS1 ON PUBLIC.BBS(REFERENCE);             
CREATE CACHED TABLE PUBLIC.LABORITEMS(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    KUERZEL VARCHAR(80),
    TITEL VARCHAR(80),
    LABORID VARCHAR(25),
    REFMANN VARCHAR(256),
    REFFRAUORTX VARCHAR(256),
    EINHEIT VARCHAR(20),
    TYP CHAR(1),
    GRUPPE VARCHAR(25),
    PRIO CHAR(3),
    BILLINGCODE VARCHAR(128),
    EXPORT VARCHAR(100),
    LOINCCODE VARCHAR(128),
    VISIBLE VARCHAR(1),
    DIGITS VARCHAR(16),
    FORMULA VARCHAR(255)
);
ALTER TABLE PUBLIC.LABORITEMS ADD CONSTRAINT PUBLIC.CONSTRAINT_D6 PRIMARY KEY(ID);             
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.LABORITEMS;               
CREATE INDEX PUBLIC.LABIT1 ON PUBLIC.LABORITEMS(KUERZEL);      
CREATE INDEX PUBLIC.LABIT2 ON PUBLIC.LABORITEMS(LABORID);      
CREATE CACHED TABLE PUBLIC.LABORWERTE(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    PATIENTID VARCHAR(25),
    DATUM CHAR(8),
    ZEIT CHAR(6),
    ITEMID VARCHAR(25),
    RESULTAT VARCHAR(255),
    FLAGS VARCHAR(10),
    ORIGIN VARCHAR(30),
    UNIT VARCHAR(255),
    ANALYSETIME VARCHAR(24),
    OBSERVATIONTIME VARCHAR(24),
    TRANSMISSIONTIME VARCHAR(24),
    REFMALE VARCHAR(255),
    REFFEMALE VARCHAR(255),
    ORIGINID VARCHAR(25),
    KOMMENTAR LONGVARCHAR,
    EXTINFO LONGVARBINARY
);   
ALTER TABLE PUBLIC.LABORWERTE ADD CONSTRAINT PUBLIC.CONSTRAINT_D7 PRIMARY KEY(ID);             
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.LABORWERTE;               
CREATE INDEX PUBLIC.LABOR1 ON PUBLIC.LABORWERTE(PATIENTID);    
CREATE INDEX PUBLIC.LABOR2 ON PUBLIC.LABORWERTE(DATUM);        
CREATE INDEX PUBLIC.LABOR3 ON PUBLIC.LABORWERTE(ITEMID);       
CREATE CACHED TABLE PUBLIC.LABGROUPS(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    NAME VARCHAR(30)
);             
ALTER TABLE PUBLIC.LABGROUPS ADD CONSTRAINT PUBLIC.CONSTRAINT_8 PRIMARY KEY(ID);               
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.LABGROUPS;
CREATE CACHED TABLE PUBLIC.LABGROUP_ITEM_JOINT(
    LASTUPDATE BIGINT,
    GROUPID VARCHAR(25),
    ITEMID VARCHAR(25),
    COMMENT LONGVARCHAR
);             
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.LABGROUP_ITEM_JOINT;      
CREATE CACHED TABLE PUBLIC.REZEPTE(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    PATIENTID VARCHAR(25),
    MANDANTID VARCHAR(25),
    BRIEFID VARCHAR(25),
    DATUM CHAR(8),
    RPTXT LONGVARCHAR,
    RPZUSATZ VARCHAR(80)
);  
ALTER TABLE PUBLIC.REZEPTE ADD CONSTRAINT PUBLIC.CONSTRAINT_6C PRIMARY KEY(ID);
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.REZEPTE;  
CREATE INDEX PUBLIC.RP1 ON PUBLIC.REZEPTE(PATIENTID);          
CREATE CACHED TABLE PUBLIC.HEAP(
    ID VARCHAR(80) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    INHALT LONGVARBINARY,
    DATUM CHAR(8)
);           
ALTER TABLE PUBLIC.HEAP ADD CONSTRAINT PUBLIC.CONSTRAINT_2 PRIMARY KEY(ID);    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.HEAP;     
CREATE CACHED TABLE PUBLIC.AUF(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    PATIENTID VARCHAR(25),
    FALLID VARCHAR(25),
    BRIEFID VARCHAR(25),
    PROZENT CHAR(3),
    DATUMAUZ CHAR(8),
    DATUMVON CHAR(8),
    DATUMBIS CHAR(8),
    GRUND VARCHAR(50),
    AUFZUSATZ VARCHAR(80)
);    
ALTER TABLE PUBLIC.AUF ADD CONSTRAINT PUBLIC.CONSTRAINT_FE PRIMARY KEY(ID);    
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.AUF;      
CREATE INDEX PUBLIC.AUF1 ON PUBLIC.AUF(PATIENTID);             
CREATE CACHED TABLE PUBLIC.EIGENLEISTUNGEN(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    CODE VARCHAR(20),
    BEZEICHNUNG VARCHAR(80),
    EK_PREIS CHAR(6),
    VK_PREIS CHAR(6),
    ZEIT CHAR(4)
);            
ALTER TABLE PUBLIC.EIGENLEISTUNGEN ADD CONSTRAINT PUBLIC.CONSTRAINT_D8 PRIMARY KEY(ID);        
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.EIGENLEISTUNGEN;          
CREATE CACHED TABLE PUBLIC.HEAP2(
    ID VARCHAR(80) NOT NULL,
    DELETED CHAR(1) DEFAULT '0',
    DATUM CHAR(8),
    LASTUPDATE BIGINT,
    CONTENTS LONGVARBINARY
);        
ALTER TABLE PUBLIC.HEAP2 ADD CONSTRAINT PUBLIC.CONSTRAINT_41 PRIMARY KEY(ID);  
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.HEAP2;    
CREATE CACHED TABLE PUBLIC.LOGS(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    OID VARCHAR(255),
    DATUM CHAR(8),
    TYP VARCHAR(20),
    USERID VARCHAR(25),
    STATION VARCHAR(255),
    EXTINFO LONGVARBINARY
);             
ALTER TABLE PUBLIC.LOGS ADD CONSTRAINT PUBLIC.CONSTRAINT_23 PRIMARY KEY(ID);   
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.LOGS;     
CREATE CACHED TABLE PUBLIC.USERCONFIG(
    LASTUPDATE BIGINT,
    USERID VARCHAR(25),
    PARAM VARCHAR(80),
    VALUE LONGVARCHAR
);          
-- 2 +/- SELECT COUNT(*) FROM PUBLIC.USERCONFIG;               
INSERT INTO PUBLIC.USERCONFIG(LASTUPDATE, USERID, PARAM, VALUE) VALUES
(NULL, 'U6e0ebf050718ffd9042', 'perspectives/fix_layout', '0'),
(NULL, 'U6e0ebf050718ffd9042', 'anwender/smallfont_default', '1|Helvetica|7.0|0|GTK|1|;');              
CREATE INDEX PUBLIC.UCFG ON PUBLIC.USERCONFIG(PARAM);          
CREATE INDEX PUBLIC.UCFG2 ON PUBLIC.USERCONFIG(USERID);        
CREATE CACHED TABLE PUBLIC.XID(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    TYPE VARCHAR(80),
    OBJECT VARCHAR(25),
    DOMAIN VARCHAR(255),
    DOMAIN_ID VARCHAR(255),
    QUALITY CHAR(1) DEFAULT '0'
);     
ALTER TABLE PUBLIC.XID ADD CONSTRAINT PUBLIC.CONSTRAINT_153 PRIMARY KEY(ID);   
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.XID;      
CREATE INDEX PUBLIC.XIDIDX1 ON PUBLIC.XID(DOMAIN);             
CREATE INDEX PUBLIC.XIDIDX2 ON PUBLIC.XID(DOMAIN_ID);          
CREATE INDEX PUBLIC.XIDIDX3 ON PUBLIC.XID(OBJECT);             
CREATE CACHED TABLE PUBLIC.ETIKETTEN(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    IMAGE VARCHAR(25),
    DELETED CHAR(1) DEFAULT '0',
    IMPORTANCE VARCHAR(7),
    NAME VARCHAR(40),
    FOREGROUND CHAR(6),
    BACKGROUND CHAR(6),
    CLASSES VARCHAR(255)
); 
ALTER TABLE PUBLIC.ETIKETTEN ADD CONSTRAINT PUBLIC.CONSTRAINT_A5 PRIMARY KEY(ID);              
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ETIKETTEN;
CREATE INDEX PUBLIC.ETIKETTE1 ON PUBLIC.ETIKETTEN(NAME);       
CREATE CACHED TABLE PUBLIC.ETIKETTEN_OBJECT_LINK(
    LASTUPDATE BIGINT,
    OBJ VARCHAR(25),
    ETIKETTE VARCHAR(25)
);      
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ETIKETTEN_OBJECT_LINK;    
CREATE INDEX PUBLIC.ETIKETTE2 ON PUBLIC.ETIKETTEN_OBJECT_LINK(OBJ);            
CREATE INDEX PUBLIC.ETIKETTE3 ON PUBLIC.ETIKETTEN_OBJECT_LINK(ETIKETTE);       
CREATE CACHED TABLE PUBLIC.ETIKETTEN_OBJCLASS_LINK(
    OBJCLASS VARCHAR(80),
    STICKER VARCHAR(25)
);       
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.ETIKETTEN_OBJCLASS_LINK;  
CREATE INDEX PUBLIC.EOL1 ON PUBLIC.ETIKETTEN_OBJCLASS_LINK(OBJCLASS);          
CREATE CACHED TABLE PUBLIC.DBIMAGE(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT,
    DELETED CHAR(1) DEFAULT '0',
    DATUM CHAR(8),
    PREFIX VARCHAR(80),
    TITLE VARCHAR(80),
    BILD LONGVARBINARY
);           
ALTER TABLE PUBLIC.DBIMAGE ADD CONSTRAINT PUBLIC.CONSTRAINT_81 PRIMARY KEY(ID);
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.DBIMAGE;  
CREATE INDEX PUBLIC.DBIMAGE1 ON PUBLIC.DBIMAGE(TITLE);         
CREATE CACHED TABLE PUBLIC.USER_(
    ID VARCHAR(25) NOT NULL,
    DELETED CHAR(1) DEFAULT '0',
    KONTAKT_ID VARCHAR(25),
    LASTUPDATE BIGINT,
    HASHED_PASSWORD VARCHAR(64),
    SALT VARCHAR(64),
    IS_ACTIVE CHAR(1) DEFAULT '1',
    IS_ADMINISTRATOR CHAR(1) DEFAULT '0',
    KEYSTORE LONGVARCHAR,
    EXTINFO LONGVARBINARY
);  
ALTER TABLE PUBLIC.USER_ ADD CONSTRAINT PUBLIC.CONSTRAINT_4D PRIMARY KEY(ID);  
-- 2 +/- SELECT COUNT(*) FROM PUBLIC.USER_;    
INSERT INTO PUBLIC.USER_(ID, DELETED, KONTAKT_ID, LASTUPDATE, HASHED_PASSWORD, SALT, IS_ACTIVE, IS_ADMINISTRATOR, KEYSTORE, EXTINFO) VALUES
('Administrator', '0', 'e6d77d2962793f86102', 1455973137155, 'b94a0b6fc7be97e0a1585ac85e814d3852668968', '1254bb9a05856b9e', '1', '1', NULL, NULL),
('007', '0', 'U6e0ebf050718ffd9042', 1455973137427, '0e6ffa8bd08310d83790f2caf019b3f66bf51d48', 'c76f29ce066d0887', '1', '0', NULL, NULL);     
CREATE CACHED TABLE PUBLIC.ROLE(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT DEFAULT NULL,
    DELETED CHAR(1) DEFAULT '0',
    EXTINFO LONGVARBINARY,
    ISSYSTEMROLE CHAR(1) DEFAULT '0'
);          
ALTER TABLE PUBLIC.ROLE ADD CONSTRAINT PUBLIC.CONSTRAINT_26 PRIMARY KEY(ID);   
-- 6 +/- SELECT COUNT(*) FROM PUBLIC.ROLE;     
INSERT INTO PUBLIC.ROLE(ID, LASTUPDATE, DELETED, EXTINFO, ISSYSTEMROLE) VALUES
('user', NULL, '0', NULL, '1'),
('user_external', NULL, '0', NULL, '1'),
('executive_doctor', NULL, '0', NULL, '1'),
('doctor', NULL, '0', NULL, '1'),
('assistant', NULL, '0', NULL, '1'),
('patient', NULL, '0', NULL, '1');  
CREATE CACHED TABLE PUBLIC.USER_ROLE_JOINT(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT DEFAULT NULL,
    DELETED CHAR(1) DEFAULT NULL,
    USER_ID VARCHAR(25) NOT NULL
);             
ALTER TABLE PUBLIC.USER_ROLE_JOINT ADD CONSTRAINT PUBLIC.CONSTRAINT_D1B PRIMARY KEY(ID, USER_ID);              
-- 2 +/- SELECT COUNT(*) FROM PUBLIC.USER_ROLE_JOINT;          
INSERT INTO PUBLIC.USER_ROLE_JOINT(ID, LASTUPDATE, DELETED, USER_ID) VALUES
('user', NULL, '0', '007'),
('executive_doctor', NULL, '0', '007');
CREATE CACHED TABLE PUBLIC.RIGHT_(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT DEFAULT NULL,
    DELETED CHAR(1) DEFAULT '0',
    LOG_EXECUTION CHAR(1),
    NAME VARCHAR(256),
    PARENTID VARCHAR(25),
    I18N_NAME VARCHAR(256)
); 
ALTER TABLE PUBLIC.RIGHT_ ADD CONSTRAINT PUBLIC.CONSTRAINT_9 PRIMARY KEY(ID);  
-- 40 +/- SELECT COUNT(*) FROM PUBLIC.RIGHT_;  
INSERT INTO PUBLIC.RIGHT_(ID, LASTUPDATE, DELETED, LOG_EXECUTION, NAME, PARENTID, I18N_NAME) VALUES
('root', NULL, '0', NULL, 'root', '', NULL),
('c19734cdf2ca2b8', 1455973137220, '0', NULL, 'AccountingGlobal', 'root', 'Globales Verrechnen'),
('44ef3f0a713e16', 1455973137220, '0', NULL, 'read', 'c19734cdf2ca2b8', 'lesen'),
('166c5fbe9a622f', 1455973137224, '0', NULL, 'Admin', 'root', 'Administration'),
('b57e2605144d75df', 1455973137224, '0', NULL, 'Reminders', '166c5fbe9a622f', 'Reminders'),
('296862557663050', 1455973137226, '0', NULL, 'createBills', 'c19734cdf2ca2b8', 'Rnn_ erstellen'),
('a8696d8a30864f87', 1455973137228, '0', NULL, 'Aktionen', 'root', 'Aktionen'),
('9e43a6d32fe6061', 1455973137231, '0', NULL, 'Rechnungen', 'root', 'Rechnungen'),
('13d8771beb1b', 1455973137234, '0', NULL, 'Fall', 'root', 'main::Fall'),
('9797c8ed2540cd06', 1455973137234, '0', NULL, 'Specials', '13d8771beb1b', 'Fall-Spezialfelder in der Fall-View'),
('1a463ca163308abe', 1455973137235, '0', NULL, 'Define_specials', '9797c8ed2540cd06', 'Definieren von Spezialfeldern im Abrechnungssystem'),
('79d3a17fc74f5', 1455973137237, '0', NULL, 'copy', '13d8771beb1b', 'kopieren'),
('dc5c457d83e95ed7', 1455973137239, '0', NULL, STRINGDECODE('L\u00f6schen'), 'root', STRINGDECODE('L\u00f6schen')),
('df86da724914fac', 1455973137240, '0', NULL, 'Dauermedikation', 'dc5c457d83e95ed7', 'Dauermedikation'),
('1567e02bbaf5e8c5', 1455973137242, '0', NULL, 'Laborwerte', 'dc5c457d83e95ed7', 'Laborwerte'),
('ca488f5331595492', 1455973137245, '0', NULL, 'Dokumente', 'root', 'Dokumente'),
('5e856339cbdd1b04', 1455973137245, '0', NULL, 'create', 'ca488f5331595492', 'erstellen'),
('185e66bcd74ca01a', 1455973137247, '0', NULL, 'createCategory', 'ca488f5331595492', 'Kategorie erstellen'),
('5c2f42e3bfab5a55', 1455973137249, '0', NULL, 'delete', 'ca488f5331595492', STRINGDECODE('L\u00f6schen')),
('15101375d93a134a', 1455973137251, '0', NULL, STRINGDECODE('Systemvorlagen \u00e4ndern'), 'ca488f5331595492', STRINGDECODE('Systemvorlagen \u00e4ndern')),
('4b504fdd0f26593b', 1455973137253, '0', NULL, STRINGDECODE('Vorlagen \u00e4ndern'), 'ca488f5331595492', STRINGDECODE('Vorlagen \u00e4ndern')),
('1760d3cd767660', 1455973137255, '0', NULL, 'Daten', 'root', 'Daten'),
('5e8504baa3ccbb00', 1455973137256, '0', NULL, 'Kontakt', '1760d3cd767660', 'Kontakt'),
('19e98dde2b1a45f', 1455973137258, '0', NULL, 'Konsultation', 'root', 'main::Konsultation'),
('b373c30e3705866', 1455973137259, '0', NULL, 'Leistungen', 'root', 'Leistungen'),
('1c18d2a479a16ccc', 1455973137262, '0', NULL, 'Laborparamter vereinen', '166c5fbe9a622f', 'Laborparameter vereinen'),
('5f0b9757dcf1ee5', 1455973137264, '0', NULL, 'Patient', '1760d3cd767660', 'main::Patient'),
('fd1b0cc8a25af715', 1455973137266, '0', NULL, 'Script', 'root', 'Script'),
('710051961b7bc441', 1455973137268, '0', NULL, 'Beenden', 'a8696d8a30864f87', 'beenden'),
('371a57e8a0eb3', 1455973137270, '0', NULL, STRINGDECODE('\u00dcber'), 'a8696d8a30864f87', STRINGDECODE('\u00fcber')),
('199c713ed089b6a', 1455973137272, '0', NULL, 'Hilfe', 'a8696d8a30864f87', 'Hilfe'),
('1627eaa2f9d37bba', 1455973137274, '0', NULL, 'Anmelden', 'a8696d8a30864f87', 'Anmelden'),
('9d3df572d800dd93', 1455973137276, '0', NULL, 'LoadInfoStore', 'root', 'LoadInfoStore'),
('99a9748ac3d87e0', 1455973137278, '0', NULL, 'AlleVerrechnen', 'b373c30e3705866', STRINGDECODE('F\u00fcr alle Mandanten verrechnen')),
('103a6569184c75dc', 1455973137280, '0', NULL, 'Verrechnen', 'b373c30e3705866', 'verrechnen'),
('11629a6a36aa66c2', 1455973137282, '0', NULL, 'Anwender', '1760d3cd767660', 'Anwender'),
('11d2973c44cdd88c3', 1455973137284, '0', NULL, 'Mandant', '1760d3cd767660', 'Mandant'),
('7e4592d8c3c785f', 1455973137286, '0', NULL, 'Konsultation', '166c5fbe9a622f', 'main::Konsultation'),
('52fa258a537e15ab', 1455973137287, '0', NULL, 'change_billed', '7e4592d8c3c785f', STRINGDECODE('Verrechnete \u00e4ndern')),
('c91c6da890975fa3', 1455973137289, '0', NULL, 'Zugriff', '166c5fbe9a622f', 'Zugriff');            
CREATE CACHED TABLE PUBLIC.ROLE_RIGHT_JOINT(
    ID VARCHAR(25) NOT NULL,
    LASTUPDATE BIGINT DEFAULT NULL,
    DELETED CHAR(1) DEFAULT NULL,
    ROLE_ID VARCHAR(25) NOT NULL
);            
ALTER TABLE PUBLIC.ROLE_RIGHT_JOINT ADD CONSTRAINT PUBLIC.CONSTRAINT_DF PRIMARY KEY(ID, ROLE_ID);              
-- 31 +/- SELECT COUNT(*) FROM PUBLIC.ROLE_RIGHT_JOINT;        
INSERT INTO PUBLIC.ROLE_RIGHT_JOINT(ID, LASTUPDATE, DELETED, ROLE_ID) VALUES
('44ef3f0a713e16', NULL, '0', 'user'),
('b57e2605144d75df', NULL, '0', 'user'),
('296862557663050', NULL, '0', 'user'),
('a8696d8a30864f87', NULL, '0', 'user'),
('9e43a6d32fe6061', NULL, '0', 'user'),
('1a463ca163308abe', NULL, '0', 'user'),
('79d3a17fc74f5', NULL, '0', 'user'),
('df86da724914fac', NULL, '0', 'user'),
('1567e02bbaf5e8c5', NULL, '0', 'user'),
('5e856339cbdd1b04', NULL, '0', 'user'),
('185e66bcd74ca01a', NULL, '0', 'user'),
('5c2f42e3bfab5a55', NULL, '0', 'user'),
('15101375d93a134a', NULL, '0', 'user'),
('4b504fdd0f26593b', NULL, '0', 'user'),
('5e8504baa3ccbb00', NULL, '0', 'user'),
('19e98dde2b1a45f', NULL, '0', 'user'),
('b373c30e3705866', NULL, '0', 'user'),
('1c18d2a479a16ccc', NULL, '0', 'user'),
('5f0b9757dcf1ee5', NULL, '0', 'user'),
('fd1b0cc8a25af715', NULL, '0', 'user'),
('710051961b7bc441', NULL, '0', 'user'),
('371a57e8a0eb3', NULL, '0', 'user'),
('199c713ed089b6a', NULL, '0', 'user'),
('1627eaa2f9d37bba', NULL, '0', 'user'),
('9d3df572d800dd93', NULL, '0', 'user'),
('99a9748ac3d87e0', NULL, '0', 'assistant'),
('103a6569184c75dc', NULL, '0', 'assistant'),
('11629a6a36aa66c2', NULL, '0', 'doctor'),
('11d2973c44cdd88c3', NULL, '0', 'doctor'),
('52fa258a537e15ab', NULL, '0', 'doctor'),
('c91c6da890975fa3', NULL, '0', 'executive_doctor');               
CREATE FORCE VIEW PUBLIC.RIGHTS_PER_ROLE(ROLE_ID, RIGHT_ID) AS
SELECT
    R.ID AS ROLE_ID,
    RI.ID AS RIGHT_ID
FROM PUBLIC.ROLE R
    /* PUBLIC.PRIMARY_KEY_26 */
LEFT OUTER JOIN PUBLIC.ROLE_RIGHT_JOINT RRJ
    /* PUBLIC.ROLE_RIGHT_JOINT.tableScan */
    ON R.ID = RRJ.ROLE_ID
LEFT OUTER JOIN PUBLIC.RIGHT_ RI
    /* PUBLIC.PRIMARY_KEY_9: ID = RRJ.ID */
    ON RRJ.ID = RI.ID
ORDER BY 1
/* index sorted */;        
CREATE FORCE VIEW PUBLIC.RIGHTS_PER_USER(USER_ID, RIGHT_ID, RIGHT_NAME) AS
SELECT
    U.ID AS USER_ID,
    RI.ID AS RIGHT_ID,
    RI.NAME AS RIGHT_NAME
FROM PUBLIC.USER_ U
    /* PUBLIC.PRIMARY_KEY_4D */
LEFT OUTER JOIN PUBLIC.USER_ROLE_JOINT URJ
    /* PUBLIC.USER_ROLE_JOINT.tableScan */
    ON U.ID = URJ.USER_ID
LEFT OUTER JOIN PUBLIC.ROLE R
    /* PUBLIC.PRIMARY_KEY_26: ID = URJ.ID */
    ON URJ.ID = R.ID
LEFT OUTER JOIN PUBLIC.ROLE_RIGHT_JOINT RRJ
    /* PUBLIC.ROLE_RIGHT_JOINT.tableScan */
    ON R.ID = RRJ.ROLE_ID
LEFT OUTER JOIN PUBLIC.RIGHT_ RI
    /* PUBLIC.PRIMARY_KEY_9: ID = RRJ.ID */
    ON RRJ.ID = RI.ID
ORDER BY 1
/* index sorted */;
